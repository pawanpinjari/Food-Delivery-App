// import React, { useEffect, useState } from 'react'
// import axios from 'axios'
// import { useNavigate } from "react-dom"
// import {BiSolidPhoneCall} from "react-icons/bi"
// import {FaLocationDot} from "react-icons/fa6"
// const Rec_order = (props) => {
//   const[data,setData]=useState("")
//   // const history=useNavigate();
//   // const navigate = useNavigate();
//   useEffect(() => {
//     const name = props.name
//     try {
  
//         axios.post("http://localhost:8000/rec_order",{name})
//             .then(res => {
//                 if (res.data) {
//                   const data=res.data
//                   console.log(data)
//                   setData(data)
//                   // const logDataArray = data.map(item => item.bill_address["name"]);


//                 } else {
//                     console.log("data not found");
//                 }
//             })
//             .catch(e => {
//                 console.log("error1", e);
//             });
//     } catch (e) {
//         console.log("error2", e);
//     }
// }, [props.Name]);

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-dom';
import { BiSolidPhoneCall } from 'react-icons/bi';
import { FaLocationDot } from 'react-icons/fa6';

const Rec_order = (props) => {
  const [data, setData] = useState('');


  const fetchData = async () => {
  
    const name = props.name;
    try {
      const response = await axios.post('http://localhost:8000/rec_order', { name });
      if (response.data) {
        const newData = response.data;
        console.log(newData);
        setData(newData);
      } else {
        console.log('Data not found');
      }
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  useEffect(() => {
    fetchData();
  }, [props.Name]);

  useEffect(() => {
    const intervalId = setInterval(() => {
      fetchData();
    }, 60000);

    
    return () => clearInterval(intervalId);
  }, []);


  return (
    <>
    <div className='order-container'>
      <div className='cont-rec'>

      
    <h3>All Orders</h3>
   
    {
       Array.isArray(data) && data.length > 0 ? (
        data.map((e, i) => (
          <>
          <h3>order no {i+1}</h3>
          <div className='order-main'>
          <div key={i} className='order-bill'>
            <p className='sub-title'>Billing details</p>
            <div className='img-cont'>

          <img src={`./images/${e.LogData[0].image}`} alt="" className='order-image'/>
            </div>
            <div>
              
              <p>{e.bill_address.name}</p>
            </div>
            
            <div>
              
              <p><BiSolidPhoneCall/>{e.bill_address.mobile}</p>
            </div>
            <div>
              
              <p><FaLocationDot />{e.bill_address.address} {e.bill_address.city} {e.bill_address.state} {e.bill_address.pin}</p>
            </div>
            
          </div>
          <div>
            <table>
              <p className='sub-title'>order details</p>
                <tr>
                  <th>Item</th>
                  <th>Qty</th>
                  <th>Price</th>
                  <th>Total</th>
                </tr>
            {
             
              e.cart_data.map((e,i)=>(
               
                <tr>
                  <td>{e.name}</td>
                  <td>{e.quantity}</td>
                  <td>{e.price}</td>
                  <td>{e.quantity*e.price}</td>
                </tr>
              ))
            }
           <tr>
            <th></th>
            <th></th>
            <th>total</th>
            <th>{e.payment.total}</th>
           </tr>
              </table>
              
          </div>
          </div>
          </>
        ))
      ):
      (
       <h1>ok</h1>
      )
    }
    </div>
     </div>
    </>
  )
}

export default Rec_order
